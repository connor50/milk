############# MILK ####################

A guide for "How, where, if applicable, to compile, configure and use your project."

This project is a python web app that uses flask and jinja templating. The project runs in the IDE, by going to 
the milk directory and starting flask. All the main python code is in the application.py file. 

When you arrive at the homepage there should be three milk options and a deliver milk button below. 

Chocolate Milk
	If you choose chocolate milk, you should see a "Serving mik" flashing text and then current news articles should display
	that return as overall positive based on sentiment analysis. The rest of the news is filtered out. 

Skimmed Milk
	If you choose skimmed milk, you should see again the flashing serving milk text and then just the current headlines from 
	the top news sources, without images. 

Whole Milk
	If you choose whole milk, you should see the flashing serving milk text and then the images and headlines from many news sources. 
	This is an attempt to give you an overview of the news. 
	
Deliver my milk
	Deliver my milk allows milk to email users when once every 24 hours with uptodate news to their inbox. Put in 
	your email address, choose your type of milk, and expect the news to be delivered each day. 

----- Questions -------

Sometimes serving milk may flash for a while. The news api requests take a while as it is pulling from a wide range of news sources.

Email does not send until 24 hours have passed as it is tied into the webpage get request. This
means in production, as long as users visited the site, the check would be performed and the email would be sent.
To verify this, you can change the value of date.txt to an epoch period that is less than 24 hours (84600 seconds) than the current epoch time
then if you reload the page, the email will be sent. 


